// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pg/order/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	order "wb_test_1/internal/models/order"

	gomock "github.com/golang/mock/gomock"
)

// MockPgDbRepositoryWorker is a mock of PgDbRepositoryWorker interface.
type MockPgDbRepositoryWorker struct {
	ctrl     *gomock.Controller
	recorder *MockPgDbRepositoryWorkerMockRecorder
}

// MockPgDbRepositoryWorkerMockRecorder is the mock recorder for MockPgDbRepositoryWorker.
type MockPgDbRepositoryWorkerMockRecorder struct {
	mock *MockPgDbRepositoryWorker
}

// NewMockPgDbRepositoryWorker creates a new mock instance.
func NewMockPgDbRepositoryWorker(ctrl *gomock.Controller) *MockPgDbRepositoryWorker {
	mock := &MockPgDbRepositoryWorker{ctrl: ctrl}
	mock.recorder = &MockPgDbRepositoryWorkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPgDbRepositoryWorker) EXPECT() *MockPgDbRepositoryWorkerMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockPgDbRepositoryWorker) GetAll() ([]*order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockPgDbRepositoryWorkerMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPgDbRepositoryWorker)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockPgDbRepositoryWorker) GetById(id string) (*order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockPgDbRepositoryWorkerMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockPgDbRepositoryWorker)(nil).GetById), id)
}

// Insert mocks base method.
func (m *MockPgDbRepositoryWorker) Insert(arg0 order.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockPgDbRepositoryWorkerMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockPgDbRepositoryWorker)(nil).Insert), arg0)
}
